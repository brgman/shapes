name: Publish to npm and GitHub Packages

on:
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # Create .npmrc for both registries
      - name: Create .npmrc
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
          echo "@brgman:registry=https://npm.pkg.github.com" >> .npmrc

      # Install dependencies
      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Build the package
      - name: Build package
        run: npm run build

      # Get package version
      - name: Get package version
        id: package-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      # Publish to npm with latest tag
      - name: Publish to npm
        run: npm publish --access public --tag latest --registry=https://registry.npmjs.org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Deprecate old version (optional, dynamic version)
      - name: Deprecate old version
        if: steps.package-version.outputs.version != '1.0.1' # Avoid deprecating the current version
        run: npm deprecate @brgman/shapes@1.0.1 "This version is deprecated, please use a newer version." --registry=https://registry.npmjs.org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Publish to GitHub Packages
      - name: Publish to GitHub Packages
        run: npm publish --registry=https://npm.pkg.github.com
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}